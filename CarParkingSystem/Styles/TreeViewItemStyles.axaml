<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:suki="https://github.com/kikipoulet/SukiUI"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions">
  <Design.PreviewWith>
    <Border Padding="20">
      <!-- Add Controls for Previewer Here -->
    </Border>
  </Design.PreviewWith>

	<Styles.Resources>
		<ResourceDictionary>
			<ResourceDictionary.ThemeDictionaries>
				<ResourceDictionary x:Key='Light'>
					<SolidColorBrush x:Key='SelectedForeground'>#ffffff</SolidColorBrush>
					<SolidColorBrush x:Key='BorderBrush'>#e2e2e2</SolidColorBrush>
					<SolidColorBrush x:Key='ActiveBrush'>#0a59f7</SolidColorBrush>
					<SolidColorBrush x:Key='ForegroundBrush'>#222222</SolidColorBrush>
				</ResourceDictionary>
				<ResourceDictionary x:Key='Dark'>
					<SolidColorBrush x:Key='SelectedForeground' Color="{DynamicResource HighlightForegroundBrush}"/>
					<SolidColorBrush x:Key='BorderBrush'>#555555</SolidColorBrush>
					<SolidColorBrush x:Key='ActiveBrush'>#0a59f7</SolidColorBrush>
					<SolidColorBrush x:Key='ForegroundBrush'>#eff0f1</SolidColorBrush>
				</ResourceDictionary>
			</ResourceDictionary.ThemeDictionaries>
		</ResourceDictionary>
	</Styles.Resources>

  <!-- Add Styles Here -->
	<Style Selector="TreeViewItem">
		<!--<Setter Property="Padding" Value="0" />
		<Setter Property="Background" Value="{DynamicResource TreeViewItemBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource TreeViewItemBorderThemeThickness}" />
		<Setter Property="Foreground" Value="{DynamicResource TreeViewItemForeground}" />
		<Setter Property="MinHeight" Value="{DynamicResource TreeViewItemMinHeight}" />
		<Setter Property="VerticalAlignment" Value="Center" />-->
		<Setter Property="Template">
			<ControlTemplate>
				<StackPanel>
					<!--Background="{TemplateBinding Background}"-->
					<Border Name="SelectionBorder"
                            
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Focusable="True"
                            TemplatedControl.IsTemplateFocusTarget="True">
						<Grid Name="PART_Header"
                              Margin="{TemplateBinding Level,
                                                       Mode=OneWay,
                                                       Converter={StaticResource LeftMarginConverter}}"
                              ColumnDefinitions="*, 36">
							<Grid.Styles>
								<Style Selector="ToggleButton:checked">
									<Setter Property="Background" Value="Transparent" />
								</Style>
							</Grid.Styles>
							<ToggleButton Name="PART_ExpandCollapseChevron"
										  Grid.Column="1"
                                          Padding="0"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          Classes="Basic"
                                          Focusable="False"
                                          RenderTransformOrigin="50% 50%"
                                          IsChecked="{TemplateBinding IsExpanded,
                                                                      Mode=TwoWay}">
								<ToggleButton.Transitions>
									<Transitions>
										<TransformOperationsTransition Property="RenderTransform" Duration="0.25" />
									</Transitions>
								</ToggleButton.Transitions>
								<PathIcon Name="pathIcon"
										  Width="20"
                                          Height="20"
                                          Classes="Flippable"
                                          Data="{x:Static suki:Icons.ChevronRight}"/>
							</ToggleButton>
							<ContentPresenter Name="PART_HeaderPresenter"
                                              Grid.Column="0"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalAlignment}"
                                              Background="Transparent"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Focusable="False" Classes="Flat"/>
						</Grid>
						<!--实现单击展开子菜单，默认需要双击-->
						<!--<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="PointerReleased">
								<ia:ChangePropertyAction TargetObject="{Binding #PART_ExpandCollapseChevron}" PropertyName="IsChecked" Value="{Binding !IsExpanded, RelativeSource={RelativeSource AncestorLevel=1,AncestorType=TreeViewItem}}" x:DataType="ToggleButton" x:CompileBindings="False"/>
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>-->
						<!--<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="PointerEntered">
								<ia:ChangePropertyAction TargetObject="{Binding #pathIcon}" PropertyName="Foreground" Value="{DynamicResource HighlightForegroundBrush}" x:DataType="PathIcon" x:CompileBindings="False"/>
								<ia:ChangePropertyAction TargetObject="{Binding #PART_HeaderPresenter}" PropertyName="Foreground" Value="{DynamicResource HighlightForegroundBrush}" x:DataType="ContentPresenter" x:CompileBindings="False"/>
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>
						<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="PointerExited">
								<ia:ChangePropertyAction TargetObject="{Binding #pathIcon}" PropertyName="Foreground" Value="{DynamicResource SukiText}" x:DataType="PathIcon" x:CompileBindings="False"/>
								<ia:ChangePropertyAction TargetObject="{Binding #PART_HeaderPresenter}" PropertyName="Foreground" Value="{DynamicResource SukiText}" x:DataType="ContentPresenter" x:CompileBindings="False"/>
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>-->
					</Border>
					<!--suki:ItemsPresenterExtensions.AnimatedScroll="True"-->
					<ItemsPresenter Name="PART_ItemsPresenter"
                                    IsVisible="{TemplateBinding IsExpanded}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
									Margin="10,0,0,0"/></StackPanel>
			</ControlTemplate>
		</Setter>
	</Style>

	<!--设置 TreeView 的-->
	<Style Selector="TreeView">
		<Setter Property="CornerRadius" Value="{DynamicResource SmallCornerRadius}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="#dedede" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<!--<Setter Property="Foreground" Value="{DynamicResource SukiLowText}" />-->
		<!--<Setter Property="Foreground" Value="Red" />-->
	</Style>
	
	<!--设置 TreeViewItem 默认时的状态-->
	<Style Selector="TreeViewItem">
		<Setter Property="CornerRadius" Value="{DynamicResource SmallCornerRadius}" />
		<Setter Property="Margin" Value="1" />
	</Style>
	<Style Selector="TreeViewItem">
		<Setter Property="Padding" Value="5" />
		<!--<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
			<Setter Property="Foreground" Value="{DynamicResource SukiText}" />
			<Setter Property="FontSize" Value="15" />
			<Setter Property="Transitions">
				<Transitions>
					<BrushTransition Property="Foreground" Duration="0:0:0.3" />
				</Transitions>
			</Setter>
		</Style>-->
	</Style>

	<!--<Style Selector="TreeViewItem[IsExpanded=False]:pressed">
		<Setter Property="IsExpanded" Value="True" />
	</Style>
	<Style Selector="TreeViewItem[IsExpanded=True]:pressed">
		<Setter Property="IsExpanded" Value="False" />
	</Style>-->
	
	<!--选中，但失去焦点时-->
	<Style Selector="TreeViewItem:selected /template/ Border#SelectionBorder">
		<Setter Property="Background" Value="{DynamicResource SukiPrimaryColor}" />
	</Style>

	<Style Selector="TreeViewItem:pointerover /template/ Border#SelectionBorder:pointerover">
		<!--<Setter Property="Background" Value="{DynamicResource SukiCardBackground}" />-->
		<Setter Property="Background" Value="{DynamicResource SukiPrimaryColor}" />
	</Style>
	<!--20250401, add-->
	<!--<Style Selector="TreeViewItem /template/ ContentPresenter#PART_HeaderPresenter:pointerover">
		<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
	</Style>
	<Style Selector="TreeViewItem /template/ PathIcon:pointerover">
		<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
	</Style>-->
	<Style Selector="TreeViewItem /template/ Grid#PART_Header:pointerover">
		<Style Selector="^ ContentPresenter#PART_HeaderPresenter">
			<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
		</Style>
		<Style Selector="^ PathIcon">
			<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
		</Style>
	</Style>

	<Style Selector="TreeViewItem:selected /template/ Border#SelectionBorder:focus">
		<Setter Property="Background" Value="{DynamicResource SukiPrimaryColor}" />
	</Style>

	<Style Selector="TreeViewItem:selected /template/ Border#SelectionBorder:pointerover:focus">
		<Setter Property="Background" Value="{DynamicResource SukiPrimaryColor}" />
	</Style>

	<!--选中时 前景色?-->
	<Style Selector="TreeViewItem:selected &gt; TextBlock">
		<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
	</Style>
	<!--20250330, tommy, add-->
	<Style Selector="TreeViewItem:selected /template/ ContentPresenter#PART_HeaderPresenter">
		<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
	</Style>
	<Style Selector="TreeViewItem:selected /template/ PathIcon">
		<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
	</Style>

	<!--右侧按钮点击时的动画-->
	<Style Selector="TreeViewItem[IsExpanded=True] /template/ ToggleButton#PART_ExpandCollapseChevron">
		<Setter Property="RenderTransform" Value="rotate(90deg)" />
	</Style>
	
</Styles>
